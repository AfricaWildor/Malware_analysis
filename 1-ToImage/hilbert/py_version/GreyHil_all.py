import os
import numpy as np

from PIL import Image, ImageDraw


arr = np.load("./hilbert.npy")
# print(arr)
n = 8
dim = 2 ** n
num = 0
dir_list = os.listdir("E:\malware-classification\BYTES-DATABASE\origin_bytes_datasets")
for subDir in dir_list:
	file_list = os.listdir(os.path.join("E:\malware-classification\BYTES-DATABASE\origin_bytes_datasets", subDir))
	for file in file_list:
		# print(file)
		if file.find(".bytes") >= 0:
			bytes_list = b''
			line = 0
			with open(os.path.join("E:\malware-classification\BYTES-DATABASE\origin_bytes_datasets", subDir, file), mode="r") as f:
				for l in f:
					if l.find("?") >= 0:
						continue
					str_list = l.split(" ")[1:]
					b = bytes.fromhex("".join(str_list))
					bytes_list += b
					line = line + 1
					if line == 4096:
						break

			if len(bytes_list) == 0:
				print(f"{file} is empty")
				continue

			c = Image.new("L", (dim, dim))

			id = ImageDraw.Draw(c)
			# hc = hilbert.HilbertCurve(10)

			for i in range(dim):
				for j in range(dim):
					# 重复填充
					index = arr[i][j] % len(bytes_list)
					id.point((i, j), bytes_list[index])

			c.save(os.path.join("E:\malware-classification\BYTES-DATABASE\greyhil", subDir, f"{file}.png"))
			num = num + 1
			print(num)



