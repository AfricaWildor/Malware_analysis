from PIL import Image, ImageDraw
import os, sys, array, math
import numpy as np


def file2arr(file_path, *file_save_path):
    with open(file_path, mode='rb') as f:
        buffer = array.array('B', f.read())

    array1 = np.zeros((256, 256), dtype=int)

    for i in range(len(buffer) - 2):
        j = i + 1
        array1[buffer[i]][buffer[j]] += 1

    trun_array = np.zeros(256, dtype=int)
    for i in range(256):
        for j in range(256):
            trun_array[i] += array1[i][j]

    array2 = np.zeros((256, 256), dtype=float)
    for i in range(256):
        for j in range(256):
            if trun_array[i] != 0:
                array2[i][j] = array1[i][j] / trun_array[i]

    # print(array2)

    array3 = np.zeros((256, 256), dtype=int)
    for i in range(256):
        for j in range(256):
            rgb = math.ceil(255 * array2[i][j])
            array3[i][j] = rgb



    img = Image.fromarray(array3.astype("uint8"))


    img.save(file_save_path[0])

file2arr("./0csgzpwdL3FbZEJu6DjO.bytes", "mak.png")

