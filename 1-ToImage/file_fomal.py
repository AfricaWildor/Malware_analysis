# 规范化文件夹结构。规范方式如下。
#
# 接口规范：
################# 输入 #################
#
# 文件夹root，组织格式如下：
#     root
#         virus1
#             xx.png
#             xxx.png
#             xy.png
#             ...
#         virus2
#             aa.png
#             bb.png
#             ...
#         ...
#
################# 输出 #################
#
# 输出文件root，结构组织如下：
#     root
#         train
#             virus1
#                 xx.png
#                 yy.png
#             virus2
#                 aa.png
#                 bb.png
#             ...
#         test
#             virus1
#                 ...
#             ...
#
#######################################



import math
import os
import os.path
import shutil

########## 输入病毒类型文件的根目录地址 ##########

# src_root = r"C:\Users\17287\Desktop\大三上实验班\three_chan_hil"
src_root = r"C:\Users\17287\Desktop\a"

########## 输入病毒类型的根目录地址 ##########


virus_kind_list = os.listdir(src_root) #病毒种类。没有根目录地址，只有单独的文件（夹）地址。

# 创建文件
train_path = os.path.join(src_root, "train")
test_path = os.path.join(src_root, "test")
os.mkdir(train_path)
os.mkdir(test_path)


# 在test文件夹里面创建对应virus种类
for i in range(len(virus_kind_list)):
    file = os.path.join(test_path, virus_kind_list[i])
    os.mkdir(file)

# 遍历每个病毒文件，然后将每个病毒文件内前20%图片移动，剩下的文件夹直接作为train。
for i in range(len(virus_kind_list)):
    virus_root = os.path.join(src_root, virus_kind_list[i])
    temp_samples_list = os.listdir(virus_root) # 获取某一病毒种类下的所有图片名称

    to_transefer_num = int(math.floor(len(temp_samples_list)*0.2)) # 获取20%图片的数量大小

    for j in range(to_transefer_num):
        shutil.move(os.path.join(virus_root,temp_samples_list[j]), os.path.join(os.path.join(test_path, virus_kind_list[i],temp_samples_list[j])))

    # 将转移剩下的病毒文件夹直接转移到train内
    shutil.move(virus_root, train_path)