import os
import numpy as np

from PIL import Image, ImageDraw

file_list = os.listdir("E:/malware-classification/train")
arr = np.load("./hilbert.npy")
n = 8
dim = 2 ** n

for file in file_list:
	if file.find(".bytes") >= 0:
		bytes_list = b''
		line = 0
		with open(os.path.join("E:/malware-classification/train", file), mode="r") as f:
			for l in f:
				if l.find("?") >= 0:
					continue
				str_list = l.split(" ")[1:]
				b = bytes.fromhex("".join(str_list))
				bytes_list += b
				line = line + 1
				if line == 4096:
					break

		c = Image.new("L", (dim, dim))

		id = ImageDraw.Draw(c)
		# hc = hilbert.HilbertCurve(10)

		for i in range(dim):
			for j in range(dim):
				# 重复填充
				index = arr[i][j] % len(bytes_list)
				id.point((i, j), bytes_list[index])

		c.save(f"E:/malware-classification/train_img/{file}.png")

# # print(len(bytes_list))
#
# n = 8
# dim = 2 ** n
#
# c = Image.new("L", (dim, dim))
#
# id = ImageDraw.Draw(c)
# # hc = hilbert.HilbertCurve(10)
#
# arr = np.load("./hilbert.npy")
# st = time.time()
#
# for i in range(dim):
# 	for j in range(dim):
# 		# 重复填充
#
# 		index = arr[i][j] % len(bytes_list)
# 		id.point((i, j), bytes_list[index])
#
# # index = arr[i][j]
# # if index < len(bytes_list):
# # 	id.point((i, j), bytes_list[index])
# # else:
# # 	id.point((i, j), 255)
#
# et = time.time()
#
# c.save("./test.png")
#
# print(et - st)
