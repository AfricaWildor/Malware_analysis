# import numpy
import numpy as np
import matplotlib.pyplot as plt

arr_10 = np.load("a_1118.npy")  # len: 10364
#arr_10 = np.load("whiteSampleToBodmas.npy")
np.set_printoptions(suppress=True)
np.set_printoptions(precision=3)  # 设精度为3


# a = [0]*10
# countEveryType = [0]*10
# #统计每一类型的测试集合共有多少个
# for sample in arr_10.dtype('i4'):
#
#     countEveryType[sample[10]] += 1
#
# print(countEveryType)


def statis():
    arr_new = arr_10
    exceptType = [11, 13, 14, 15, 20, 21, 24, 26, 32, 38, 42, 49, 56]
    exceptType =[i+1 for i in exceptType]
    #exceptType = []
    rightTypePossi = []
    j = 0
    for lin in arr_new:
        line = lin[0:56]
        maxPos = np.argmax(line)
        maxValue = np.max(line)
        type = int(lin[57])
        if type in exceptType:
            continue
        else:
            #if True:
            if maxPos == type:
                j+=1
                rightTypePossi.append(maxValue)
            else:
                continue
        # print("max: ",maxPos, "num: ",np.max(line),"type: ",lin[57])

    # print(rightTypePossi)
    # print(max(rightTypePossi))
    print(j)
    return rightTypePossi


# print(arr_new)
# print(np.max(arr_new, axis=1))

def gen_graph(mat: np.ndarray):
    plt.figure(figsize=(8, 6))
    plt.title("irrelate_0th_samples")
    plt.hist(mat)

    #plt.savefig("./distri.png")
    plt.show()

def staZF():
    arr_new = arr_10
    #exceptType = [11, 13, 14, 20, 21, 24, 26, 32, 38, 42, 49, 56]
    exceptType = []

    numsofZlist = []
    for lin in arr_new:
        line = lin[0:56]

        maxPos = np.argmax(line)
        maxValue = np.max(line)
        type = int(lin[57])
        numOfZ = 0

        if type in exceptType:
            continue
        else:
            #if True:
            if maxPos == type:
                for num in line:
                    if num > 2:
                        numOfZ += 1
            else:
                continue
        # print("max: ",maxPos, "num: ",np.max(line),"type: ",lin[57])
        numsofZlist.append(numOfZ)

    # print(rightTypePossi)
    # print(max(rightTypePossi))
    return numsofZlist

if __name__ == '__main__':
    #rightArray = np.array(statis())
    Zarray = np.array(staZF())
    gen_graph(Zarray)
    # j = 0
    # for i in arr_10:
    #     if int(i[57]) == 41:
    #         j+=1
    #         if j==50:
    #             break
    #         print(i)
            #print("max: ", np.argmax(arr_10[i]), "num: ", np.max(arr_10[i]), "type: ", arr_10[i][57])