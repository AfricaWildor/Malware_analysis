# -*- codeing = utf-8 -*-
import os
import re


def bytes2hexStr(bytes):
	hexStr = bytes.hex()
	return hexStr


def file2bytesFile(filepath):
	if not os.path.exists('./bytesfile'):  # 是否存在这个文件夹
		os.makedirs('./bytesfile')  # 如果没有这个文件夹，那就创建一个
	with open(filepath, "rb") as file:
		print(f'Open {filepath}')
		filebytes = file.read()
		hexStr = bytes2hexStr(filebytes)
		# print(hexStr)
		# 每2个为一组
		hexlist = re.findall(r'.{2}', hexStr)
		# print(hexlist)
		content = ''
		length = len(hexlist)
		flag = 0
		for hex in range(0, length):
			if flag == 16:
				flag = 0
				content += '\r\n'
			if hex == length - 1:
				content += f'{hexlist[hex]}'
			else:
				content += f'{hexlist[hex]} '
			flag += 1
		print(f'Convert {filepath} to bytes')
		# print(content)
		contentbytes = bytes(content, 'utf-8')
		bytes_filepath = './bytesfile/' + filepath.split('.')[0] + '.bytes'

	# 是否移除原文件
	# os.remove(filepath)

	with open(bytes_filepath, 'wb') as file:
		file.write(contentbytes)
		print(f'write in {bytes_filepath}')


def file_list(dir_name):
	path = dir_name
	# os.listdir()方法获取文件夹名字，返回数组
	file_name_list = os.listdir(path)
	print(file_name_list)
	return file_name_list


if __name__ == '__main__':
	file_list = file_list('./')
	file2bytesFile('overflow_exe.exe')
# for file in file_list:
# 	print(file)
# 	file2hexStr(file)

# file2hexStr('overflow_exe.exe')
