import os

import gol
from args_get import *


proxys = gol.proxys


def download(sha256_list, dir_name):
	for sha256_hash in sha256_list:
		# path = '.././FILE_DATABASE/' + dir_name + sha256_hash + '.zip'
		path = 'FILE_DATABASE/' + dir_name + sha256_hash + '.zip'
		if not os.path.exists(path):
			data = {'query': 'get_file', 'sha256_hash': sha256_hash}
			url = "https://mb-api.abuse.ch/api/v1/"
			resp = requests.post(url, data=data,timeout=300, proxies=proxys)
			# 下载 要写入content而非text
			print('Downloading in :'+path)
			with open(path, "wb") as code:
				code.write(resp.content)
		else:
			print(path+'已存在')

def make_dir(dir_name):
	path = 'FILE_DATABASE/' + dir_name
	if not os.path.exists(path):  # 是否存在这个文件夹
		os.makedirs(path)  # 如果没有这个文件夹，那就创建一个


if __name__ == '__main__':

	#query参数
	query = {
		"signature": 'WannaCry',
		"tag": '',
		"yara_rule":''
	}

	filter_args={
		"tag": ['dll'],
		"file_type": ''

	}

	limit_item=1000 #最大下载量

	for key, value in query.items():
		if (value != ''):
			for filter,content in filter_args.items():

				if filter=='file_type':
					if content!='':
						category = f'{key}/{value}/{filter}/{content}/'
						make_dir(category)
						# locals()[函数名](arg1,arg2)
						malware_list=locals()[f'query_{key}'](value,limit_item)
						file_list=locals()[f'{filter}_filter'](content,malware_list)
						print(file_list)
						download(file_list,category)

				if filter=='tag':
					if len(content)!=0:
						tags=str(content)
						print(tags)
						category = f'{key}/{value}/{filter}/{tags}/'
						make_dir(category)
						# locals()[函数名](arg1,arg2)
						malware_list=locals()[f'query_{key}'](value,limit_item)
						file_list=locals()[f'{filter}_filter'](content,malware_list)
						print(file_list)
						download(file_list,category)